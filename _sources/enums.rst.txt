
************
Enumerations
************

This document contains the enums used by libratbag's DBus interface.

ratbag_error_code
---------------------------------------

  
Error codes used by libratbag. 

.. cpp:enum:: ratbag_error_code


    .. cpp:enumerator:: RATBAG_SUCCESS = 0




    .. cpp:enumerator:: RATBAG_ERROR_DEVICE = -1000

        An error occured on the device.         Either the device is not a libratbag device or communication with the device failed. 


    .. cpp:enumerator:: RATBAG_ERROR_CAPABILITY = -1001

        Insufficient capabilities.         This error occurs when a requested change is beyond the device's capabilities. 


    .. cpp:enumerator:: RATBAG_ERROR_VALUE = -1002

        Invalid value or value range.         The provided value or value range is outside of the legal or supported range. 


    .. cpp:enumerator:: RATBAG_ERROR_SYSTEM = -1003

        A low-level system error has occured, e.g.         a failure to access files that should be there. This error is usually unrecoverable and libratbag will print a log message with details about the error. 


    .. cpp:enumerator:: RATBAG_ERROR_IMPLEMENTATION = -1004

        Implementation bug, either in libratbag or in the caller.         This error is usually unrecoverable and libratbag will print a log message with details about the error. 

ratbag_device_capability
---------------------------------------

  


.. cpp:enum:: ratbag_device_capability


    .. cpp:enumerator:: RATBAG_DEVICE_CAP_NONE = 0




    .. cpp:enumerator:: RATBAG_DEVICE_CAP_QUERY_CONFIGURATION 

        The device has the capability to query the current hardware configuration.         If this capability is missing, libratbag cannot query the device for its current configuration and the configured resolutions and button mappings are unknown. libratbag will still provide information about the structure of the device such as the number of buttons and resolutions. Clients that encounter a device without this resolution are encouraged to upload a configuration stored on-disk to the device to reset the device to a known state.Any changes uploaded to the device will be cached in libratbag, once a client has sent a full configuration to the device libratbag can be used to query the device as normal. 


    .. cpp:enumerator:: RATBAG_DEVICE_CAP_RESOLUTION = 100

        The device provides read and/or write access to one or more resolutions. 


    .. cpp:enumerator:: RATBAG_DEVICE_CAP_SWITCHABLE_RESOLUTION 

        The device can change resolution, either software-controlled or by a hardware button.         FIXME: what about devices that only have hw buttons? can we query that, even if we can't switch it ourselves? Maybe better to have a separate cap for that then. 


    .. cpp:enumerator:: RATBAG_DEVICE_CAP_PROFILE = 200

        The device provides read and/or write access to one or more profiles. 


    .. cpp:enumerator:: RATBAG_DEVICE_CAP_SWITCHABLE_PROFILE 

        The device can switch between hardware profiles.         A device with this capability can store multiple profiles in the hardware and provides the ability to switch between the profiles, possibly with a button. Devices without this capability will only have a single profile. 


    .. cpp:enumerator:: RATBAG_DEVICE_CAP_DISABLE_PROFILE 

        The device has the capability to disable and enable profiles.         While profiles are not immediately deleted after being disabled, it is not guaranteed that the device will remember any disabled profiles the next time ratbag runs. Furthermore, the order of profiles may get changed the next time ratbag runs if profiles are disabled. 


    .. cpp:enumerator:: RATBAG_DEVICE_CAP_DEFAULT_PROFILE 

        The device can have one profile assigned as a default profile.         A default profile is the profile that is selected when the device is plugged in. Devices without this capability may select the last-used profile or a specific profile (usually the first). 


    .. cpp:enumerator:: RATBAG_DEVICE_CAP_BUTTON = 300

        The device provides read and/or write access to one or more buttons. 


    .. cpp:enumerator:: RATBAG_DEVICE_CAP_BUTTON_KEY 

        The device supports assigning button numbers, key events or key + modifier combinations. 


    .. cpp:enumerator:: RATBAG_DEVICE_CAP_BUTTON_MACROS 

        The device supports user-defined key or button sequences. 


    .. cpp:enumerator:: RATBAG_DEVICE_CAP_LED = 400

        The device supports assigning LED colors and effects. 

ratbag_profile_capability
---------------------------------------

  


.. cpp:enum:: ratbag_profile_capability


    .. cpp:enumerator:: RATBAG_PROFILE_CAP_NONE = 0




    .. cpp:enumerator:: RATBAG_PROFILE_CAP_WRITABLE_NAME = 100

        The device has the capability to write a name to a profile and store it in its flash.         Any changes uploaded to the device will be cached in libratbag and will be committed to it after a commit only. 

ratbag_resolution_capability
---------------------------------------

  


.. cpp:enum:: ratbag_resolution_capability


    .. cpp:enumerator:: RATBAG_RESOLUTION_CAP_INDIVIDUAL_REPORT_RATE = 1

        The report rate can be set per resolution mode.         If this property is not available, all resolutions within the same profile have the same report rate and changing one changes the others. 


    .. cpp:enumerator:: RATBAG_RESOLUTION_CAP_SEPARATE_XY_RESOLUTION 

        The resolution can be set for x and y separately. 

ratbag_button_type
---------------------------------------

  
Button types describing the physical button. 

.. cpp:enum:: ratbag_button_type


    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_UNKNOWN = 0




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_LEFT 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_MIDDLE 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_RIGHT 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_THUMB 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_THUMB2 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_THUMB3 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_THUMB4 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_WHEEL_LEFT 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_WHEEL_RIGHT 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_WHEEL_CLICK 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_WHEEL_UP 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_WHEEL_DOWN 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_WHEEL_RATCHET_MODE_SHIFT 

        A button to toggle the wheel from free-spinning to click-based. 


    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_EXTRA 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_SIDE 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_PINKIE 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_PINKIE2 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_RESOLUTION_CYCLE_UP 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_RESOLUTION_UP 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_RESOLUTION_DOWN 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_PROFILE_CYCLE_UP 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_PROFILE_UP 




    .. cpp:enumerator:: RATBAG_BUTTON_TYPE_PROFILE_DOWN 



ratbag_button_action_type
---------------------------------------

  
The type assigned to a button. 

.. cpp:enum:: ratbag_button_action_type


    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_TYPE_NONE = 0

        Button is disabled. 


    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_TYPE_BUTTON 

        Button sends numeric button events. 


    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_TYPE_SPECIAL 

        Button triggers a mouse-specific special function.         This includes resolution changes and profile changes. 


    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_TYPE_KEY 

        Button sends a key or key + modifier combination. 


    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_TYPE_MACRO 

        Button sends a user-defined key or button sequence. 


    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_TYPE_UNKNOWN = 1000

        Button action is unknown. 

ratbag_button_action_special
---------------------------------------

  


.. cpp:enum:: ratbag_button_action_special


    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_SPECIAL_INVALID = -1

        This button is not set up for a special action. 


    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_SPECIAL_UNKNOWN = (1 << 30)




    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_SPECIAL_DOUBLECLICK 




    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_SPECIAL_WHEEL_LEFT 




    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_SPECIAL_WHEEL_RIGHT 




    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_SPECIAL_WHEEL_UP 




    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_SPECIAL_WHEEL_DOWN 




    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_SPECIAL_RATCHET_MODE_SWITCH 




    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_SPECIAL_RESOLUTION_CYCLE_UP 




    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_SPECIAL_RESOLUTION_CYCLE_DOWN 




    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_SPECIAL_RESOLUTION_UP 




    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_SPECIAL_RESOLUTION_DOWN 




    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_SPECIAL_RESOLUTION_ALTERNATE 




    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_SPECIAL_RESOLUTION_DEFAULT 




    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_SPECIAL_PROFILE_CYCLE_UP 




    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_SPECIAL_PROFILE_CYCLE_DOWN 




    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_SPECIAL_PROFILE_UP 




    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_SPECIAL_PROFILE_DOWN 




    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_SPECIAL_SECOND_MODE 




    .. cpp:enumerator:: RATBAG_BUTTON_ACTION_SPECIAL_BATTERY_LEVEL 



ratbag_led_mode
---------------------------------------

  
RATBAG_LED_OFF - led is now off, RATBAG_LED_ON - led is on with static color, RATBAG_LED_CYCLE - led is cycling between all colors. RATBAG_LED_BREATHING - led is pulsating with static colorEach LED mode has different properties, e.g. the brightness and rate are only available in modes RATBAG_LED_CYCLE and RATBAG_LED_BREATHING modes 

.. cpp:enum:: ratbag_led_mode


    .. cpp:enumerator:: RATBAG_LED_OFF = 0




    .. cpp:enumerator:: RATBAG_LED_ON 




    .. cpp:enumerator:: RATBAG_LED_CYCLE 




    .. cpp:enumerator:: RATBAG_LED_BREATHING 



ratbag_led_type
---------------------------------------

  
LED types, usually based on their physical location. 

.. cpp:enum:: ratbag_led_type


    .. cpp:enumerator:: RATBAG_LED_TYPE_LOGO = 1




    .. cpp:enumerator:: RATBAG_LED_TYPE_SIDE 




    .. cpp:enumerator:: RATBAG_LED_TYPE_BATTERY 




    .. cpp:enumerator:: RATBAG_LED_TYPE_DPI 



ratbag_led_colordepth
---------------------------------------

  


.. cpp:enum:: ratbag_led_colordepth


    .. cpp:enumerator:: RATBAG_LED_COLORDEPTH_MONOCHROME = 400

        The device only supports a single color.         All color components should be set to 255. 


    .. cpp:enumerator:: RATBAG_LED_COLORDEPTH_RGB_888 

        The device supports RBG color with 8 bits per color. 


    .. cpp:enumerator:: RATBAG_LED_COLORDEPTH_RGB_111 

        The device supports RBG colors with 1 bit per color. 

ratbag_macro_event_type
---------------------------------------

  
Macro event types describing the event. 

.. cpp:enum:: ratbag_macro_event_type


    .. cpp:enumerator:: RATBAG_MACRO_EVENT_INVALID = -1




    .. cpp:enumerator:: RATBAG_MACRO_EVENT_NONE = 0




    .. cpp:enumerator:: RATBAG_MACRO_EVENT_KEY_PRESSED 




    .. cpp:enumerator:: RATBAG_MACRO_EVENT_KEY_RELEASED 




    .. cpp:enumerator:: RATBAG_MACRO_EVENT_WAIT 



